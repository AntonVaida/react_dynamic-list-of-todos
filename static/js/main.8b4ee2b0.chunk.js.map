{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todoList","setSelectTodo","selectTodo","list","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","setQuery","query","sortBy","setSortBy","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","selectUser","setSelectUser","useEffect","userId","response","undefined","href","email","name","App","setTodoList","length","filter","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b4ee2b0.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Pops = {\n  todoList: () => Todo[],\n  setSelectTodo: React.Dispatch<React.SetStateAction<Todo | undefined>>\n  selectTodo: Todo | undefined,\n};\n\nexport const TodoList: React.FC<Pops> = ({\n  todoList,\n  setSelectTodo,\n  selectTodo,\n}) => {\n  const list = todoList();\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          list.map(todo => (\n            <tr data-cy=\"todo\" className=\"has-background-info-light\">\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('far fa-eye', {\n                      'far fa-eye-slash': selectTodo?.id === todo.id,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  setQuery: React.Dispatch<React.SetStateAction<string>>,\n  query: string,\n  sortBy: string\n  setSortBy: React.Dispatch<React.SetStateAction<string>>,\n};\n\nexport const TodoFilter:React.FC<Props> = ({\n  setQuery,\n  query,\n  sortBy,\n  setSortBy,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={sortBy}\n          onChange={event => setSortBy(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  setSelectTodo: React.Dispatch<React.SetStateAction<Todo | undefined>>,\n  selectTodo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({ setSelectTodo, selectTodo }) => {\n  const [selectUser, setSelectUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(selectTodo.userId).then(response => setSelectUser(response));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectTodo(undefined)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectUser.email}`}>\n                {selectUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todoList, setTodoList] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [sortBy, setSortBy] = useState('all');\n  const [selectTodo, setSelectTodo] = useState<Todo>();\n\n  useEffect(() => {\n    getTodos().then(response => setTodoList(response));\n  }, []);\n\n  const searchFilter = () => {\n    return todoList.filter(todo => todo.title.includes(query));\n  };\n\n  const selectFilter = () => {\n    const list = searchFilter();\n\n    switch (sortBy) {\n      case 'active':\n        return list.filter(todo => !todo.completed);\n      case 'completed':\n        return list.filter(todo => todo.completed);\n      default:\n        return list;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setQuery={setQuery}\n                query={query}\n                sortBy={sortBy}\n                setSortBy={setSortBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todoList.length < 1\n                ? <Loader />\n                : <TodoList todoList={selectFilter} setSelectTodo={setSelectTodo} selectTodo={selectTodo} />}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectTodo && (\n        <TodoModal setSelectTodo={setSelectTodo} selectTodo={selectTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}