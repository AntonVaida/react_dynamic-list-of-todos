{"version":3,"sources":["types/SortTypes.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SortTypes","TodoList","todoList","handleSelectTodo","selectTodo","list","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","handleQuery","query","sortBy","handleSortType","value","onChange","All","Active","Completed","placeholder","event","target","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","setSelectTodo","useState","selectUser","setSelectUser","useEffect","userId","response","undefined","href","email","name","App","setTodoList","setQuery","setSortBy","length","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b3e12c9.chunk.js","sourcesContent":["export enum SortTypes {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Pops = {\n  todoList: () => Todo[],\n  handleSelectTodo: (value: Todo | undefined) => void,\n  selectTodo: Todo | undefined,\n};\n\nexport const TodoList: React.FC<Pops> = ({\n  todoList,\n  handleSelectTodo,\n  selectTodo,\n}) => {\n  const list = todoList();\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          list.map(todo => (\n            <tr\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': selectTodo?.id === todo.id,\n              })}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleSelectTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('far fa-eye', {\n                      'far fa-eye-slash': selectTodo?.id === todo.id,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { SortTypes } from '../../types/SortTypes';\n\ntype Props = {\n  handleQuery: (value: string) => void,\n  query: string,\n  sortBy: SortTypes,\n  handleSortType: (event: any) => void,\n};\n\nexport const TodoFilter:React.FC<Props> = ({\n  handleQuery,\n  query,\n  sortBy,\n  handleSortType,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={sortBy}\n          onChange={handleSortType}\n        >\n          <option value={SortTypes.All}>All</option>\n          <option value={SortTypes.Active}>Active</option>\n          <option value={SortTypes.Completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => handleQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => handleQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  setSelectTodo: (value: Todo | undefined) => void,\n  selectTodo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({ setSelectTodo, selectTodo }) => {\n  const [selectUser, setSelectUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(selectTodo.userId).then(response => setSelectUser(response));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectTodo(undefined)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectUser.email}`}>\n                {selectUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { SortTypes } from './types/SortTypes';\n\nexport const App: React.FC = () => {\n  const [todoList, setTodoList] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [sortBy, setSortBy] = useState(SortTypes.All);\n  const [selectTodo, setSelectTodo] = useState<Todo>();\n\n  useEffect(() => {\n    getTodos().then(response => setTodoList(response));\n  }, []);\n\n  const searchFilter = () => {\n    return todoList.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n  };\n\n  const selectFilter = () => {\n    const list = searchFilter();\n\n    switch (sortBy) {\n      case SortTypes.Active:\n        return list.filter(todo => !todo.completed);\n      case SortTypes.Completed:\n        return list.filter(todo => todo.completed);\n      default:\n        return list;\n    }\n  };\n\n  const handleQuery = (value: string) => {\n    setQuery(value);\n  };\n\n  const handleSortType = (event:any) => {\n    setSortBy(event.target.value);\n  };\n\n  const handleSelectTodo = (value: Todo | undefined) => {\n    setSelectTodo(value);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleQuery={handleQuery}\n                query={query}\n                sortBy={sortBy}\n                handleSortType={handleSortType}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todoList.length < 1\n                ? <Loader />\n                : (\n                  <TodoList\n                    todoList={selectFilter}\n                    handleSelectTodo={handleSelectTodo}\n                    selectTodo={selectTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectTodo && (\n        <TodoModal setSelectTodo={handleSelectTodo} selectTodo={selectTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}